name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  upload-demo-apps:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - uses: actions/checkout@v2
      - shell: bash
        env:
          SAUCE_USERNAME: ${{ secrets.SAUCE_USERNAME }}
          SAUCE_ACCESS_KEY: ${{ secrets.SAUCE_ACCESS_KEY }}
          working-directory: test/Helpers
        working-directory: ${{env.working-directory}}
        run: |
          curl -F "payload=@./demo_app.apk" -F name=demo_app.apk -u "$SAUCE_USERNAME":"$SAUCE_ACCESS_KEY" "https://api.us-west-1.saucelabs.com/v1/storage/upload"

  run-tests-edge:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - uses: browser-actions/setup-edge@latest
      - name: Run Edge Robot Tests
        run: |
          robot -i Edge test || robot -i Edge test

  run-tests-chrome:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        include:
          - os: ubuntu-latest
            set_display: export DISPLAY=:99; Xvfb :99 -screen 0 1024x768x24 -ac -noreset & sleep 3
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install . --pre
          pip install mock
          sudo apt-get update
          sudo apt-get -y -q install xvfb scrot zip curl libxml2-dev libxslt1-dev

      - name: Run Chrome Robot Tests
        run: |
          ${{ matrix.set_display }}
          robot --randomize suites -e BrokenORWindowsOREdgeORMobile test || robot --randomize suites -e BrokenORWindowsOREdgeORMobile test

  run-tests-mobile:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install . --pre
          pip install mock
          sudo apt-get update

      - name: Run Mobile Robot Tests
        run: |
          robot --randomize suites -i Mobile -e BrokenORWindowsOREdge -v sauce_username:${{ secrets.SAUCE_USERNAME }} -v sauce_key:${{ secrets.SAUCE_ACCESS_KEY }} -v GITHUB_RUN_NUMBER:Github.Zoomba.$GITHUB_RUN_NUMBER test || robot --randomize suites -i Mobile -e BrokenORWindowsOREdge -v sauce_username:${{ secrets.SAUCE_USERNAME }} -v sauce_key:${{ secrets.SAUCE_ACCESS_KEY }} -v GITHUB_RUN_NUMBER:Github.Zoomba.$GITHUB_RUN_NUMBER test

  run-tests-unit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install . --pre
          pip install coveralls mock pytest-cov
          sudo apt-get update

      - name: Run Unit Tests
        run: |
          pytest --cov-config=.coveragerc --cov=src -v

      - name: Coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.python-version }}
          parallel: true
        run: |
          coveralls --service=github
